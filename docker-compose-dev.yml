version: "3.9"

services:
  web:
    container_name: backend
    build: 'einkaufsliste_backend/'
    command: >
      sh -c "python /code/manage.py makemigrations && python /code/manage.py migrate &&
              python /code/manage.py collectstatic runserver 0.0.0.0:8000"
    volumes:
      - ./einkaufsliste_backend/:/code
    ports:
      - 8000:8000
    depends_on:
      - db
    env_file:
      - dev_vars.env
  frontend:
    build: 'einkaufsliste_frontend/'
    ports:
      - 4200:80
    env_file:
      - dev_vars.env
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    env_file:
      - dev_vars.env
  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "root@root.de"
      PGADMIN_DEFAULT_PASSWORD: "root"
    ports:
      - "5050:80"
  
  prometheus:
    image: prom/prometheus
    restart: 'no'
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus-dev.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
  
  grafana:
    image: grafana/grafana
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
    restart: 'no'
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus

volumes:
  postgres_data:
  prometheus_data: {}
  grafana_data: {}